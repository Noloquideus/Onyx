name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
      shell: bash
    
    - name: Install dependencies
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        poetry lock
        poetry install
      shell: bash
    
    - name: Install PyInstaller
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        poetry run pip install pyinstaller
      shell: bash
    
    - name: Build executable
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        poetry run pyinstaller --onefile --name onyx onyx/main.py
        if [ "${{ runner.os }}" == "Windows" ]; then
          mv dist/onyx.exe dist/onyx-windows.exe
        else
          mv dist/onyx dist/onyx-linux
        fi
      shell: bash
    
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: onyx-${{ runner.os }}
        path: dist/onyx*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          onyx-linux/onyx-linux
        body: |
          ## üéâ Onyx CLI v${{ github.ref_name }}
          
          ### üì¶ Downloads
          - **Linux**: `onyx-linux` - –°–¥–µ–ª–∞–π—Ç–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º: `chmod +x onyx-linux`
          
          ### üöÄ Features
          - üå≥ **tree**: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º
          - üìä **count**: –ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–∞—Ö —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
          - üîç **find**: –£–º–Ω—ã–π –ø–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
          - üíæ **backup**: –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∫–æ–ø–∏—è–º–∏
          - üìà **git**: –ê–Ω–∞–ª–∏–∑ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
          - üåê **net**: –°–µ—Ç–µ–≤—ã–µ —É—Ç–∏–ª–∏—Ç—ã –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
          - ‚¨áÔ∏è **download**: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞–º–∏
          - üìä **monitor**: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
          
          ### üìã Usage
          ```bash
          # Linux
          ./onyx-linux --help
          ```
          
          ### üîß Installation
          1. –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª –¥–ª—è –≤–∞—à–µ–π –û–°
          2. –î–ª—è Linux: `chmod +x onyx-linux`
          3. –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫—É –∏–∑ PATH –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
          
          ### üìñ Examples
          ```bash
          # –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ä–µ–≤–æ –ø–∞–ø–æ–∫
          onyx tree --show-size
          
          # –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ –≤ Python —Ñ–∞–π–ª–∞—Ö
          onyx count --extensions .py --show-files
          
          # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã
          onyx monitor system
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ PAT: GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
